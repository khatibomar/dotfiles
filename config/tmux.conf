# Use Vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# need this: https://superuser.com/questions/210125/scroll-shell-output-with-mouse-in-tmux
setw -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

set-option -g default-shell $SHELL

# only this line might not be enough
set -g default-terminal "screen-256color"
# Needs this line also to overrides the default color
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g status-right ''
set -g status-right-length 0

# shortcut for moving tmux buffer to clipboard
# useful if you've selected with the mouse
bind-key -nr C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane border colors
set -g pane-border-style "bg=default fg=#232635"
set -g pane-active-border-style "bg=default fg=#232635"

# color for background of bar and foreground, default takes term colors
set -g status-bg default
set -g status-fg default

# messages
set -g message-style "fg=#89DDFF bg=#292d3e"
set -g message-command-style "fg=#89DDFF bg=#292d3e"

# status
set -g window-status-style "fg=#959dcb bg=#292d3e"
set -g window-status-current-style "fg=#89ddff,bold bg=#292d3e"
set -g mode-style "bg=#959dcb fg=#292d3e"

bind-key p run-shell '$HOME/scripts/toggle_tmux_popup.sh' 

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

set -g prefix C-b

# Send prefix to a nested tmux session by doubling the prefix
bind C-b send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes using arrow keys
bind -r Up select-pane -U
bind -r Down select-pane -D
bind -r Left select-pane -L
bind -r Right select-pane -R

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n Up if-shell "$is_vim" "send-keys Up" "select-pane -U"
bind -n Down if-shell "$is_vim" "send-keys Down" "select-pane -D"
bind -n Left if-shell "$is_vim" "send-keys Left" "select-pane -L"
bind -n Right if-shell "$is_vim" "send-keys Right" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Resize panes more easily
bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5

# Resize panes more easily with Ctrl
bind -r C-Up resize-pane -U 5
bind -r C-Down resize-pane -D 5
bind -r C-Left resize-pane -L 5
bind -r C-Right resize-pane -R 5

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Switch between two most recently used windows
bind Space last-window

# switch between two most recently used sessions
bind b switch-client -l

# break pane out of window
bind-key B break-pane -d

# put pane back into window
bind-key E command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# allow to copy to system clipboard
bind-key y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "copied tmux buffer to system clipboard"

# open lazygit in a new window with prefix+g
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit"

# Install: cargo install serpl
bind-key H new-window -n serpl -c "#{pane_current_path}" "serpl"

# open lazygit in a new window with prefix+g
# bind-key l new-window -n glow -c "#{pane_current_path}" "glow"

# open an application in a new window with prefix+o, and allow me to provide the app name
bind-key o command-prompt -p "open app: " "new-window '%%'"

# show a promp to kill a window by id with prefix+X
bind-key X command-prompt -p "kill window: " "kill-window -t '%%'"

# use prefix+| (or prefix+\) to split window horizontally and prefix+- or
# (prefix+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# toggle status bar
bind-key -T prefix t set-option -g status

# search sessions
bind C-e display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

# search windows in current session
bind C-f display-popup -E "\
    tmux list-windows -F '#{window_index} #{window_name}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-window |\
    cut -d ' ' -f 1 |\
    xargs tmux select-window -t"

# Move tmux status bar to top
bind-key C-k run-shell "tmux set-option -g status-position top;"
# Move tmux status bar to bottom
bind-key C-j run-shell "tmux set-option -g status-position bottom;"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'sainnhe/tmux-fzf'

# set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run '~/.tmux/plugins/tpm/tpm'
